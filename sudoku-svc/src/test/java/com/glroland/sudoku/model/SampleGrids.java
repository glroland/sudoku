package com.glroland.sudoku.model;

public class SampleGrids {

	public static final GameGrid EMPTY = SampleGrids.makeGrid(new int [] { 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			/* ------------------------------------ */
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			/* ------------------------------------ */
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 0, 0
	});

	public static final GameGrid GAME1 = SampleGrids.makeGrid(new int [] { 
			5, 0, 0, /* | */ 0, 0, 2, /* | */ 0, 0, 3, 
			6, 0, 9, /* | */ 7, 0, 0, /* | */ 0, 0, 5, 
			0, 3, 4, /* | */ 9, 1, 0, /* | */ 0, 0, 0, 
			/* ------------------------------------ */
			1, 0, 6, /* | */ 2, 0, 0, /* | */ 9, 5, 7, 
			0, 0, 2, /* | */ 0, 0, 0, /* | */ 0, 0, 1, 
			0, 5, 0, /* | */ 0, 0, 0, /* | */ 0, 2, 0, 
			/* ------------------------------------ */
			0, 0, 0, /* | */ 3, 0, 0, /* | */ 0, 0, 0, 
			8, 0, 0, /* | */ 5, 6, 0, /* | */ 7, 0, 0, 
			9, 2, 5, /* | */ 0, 0, 0, /* | */ 1, 0, 0
	});
	
	public static final PlayableGameGrid PGAME1 = new PlayableGameGrid(GAME1);

	public static final GameGrid GAME1_SOLUTION = SampleGrids.makeGrid(new int [] { 
			5, 7, 1, /* | */ 6, 8, 2, /* | */ 4, 9, 3, 
			6, 8, 9, /* | */ 7, 4, 3, /* | */ 2, 1, 5, 
			2, 3, 4, /* | */ 9, 1, 5, /* | */ 6, 7, 8, 
			/* ------------------------------------ */
			1, 4, 6, /* | */ 2, 3, 8, /* | */ 9, 5, 7, 
			3, 9, 2, /* | */ 4, 5, 7, /* | */ 8, 6, 1, 
			7, 5, 8, /* | */ 1, 9, 6, /* | */ 3, 2, 4, 
			/* ------------------------------------ */
			4, 6, 7, /* | */ 3, 2, 1, /* | */ 5, 8, 9, 
			8, 1, 3, /* | */ 5, 6, 9, /* | */ 7, 4, 2, 
			9, 2, 5, /* | */ 8, 7, 4, /* | */ 1, 3, 6
	});

	public static final GameGrid GAME1_IMMATURE = SampleGrids.makeGrid(new int [] { 
			5, 7, 0, /* | */ 6, 8, 0, /* | */ 4, 9, 3, 
			6, 8, 9, /* | */ 7, 4, 3, /* | */ 0, 0, 5, 
			0, 3, 4, /* | */ 9, 0, 5, /* | */ 6, 7, 8, 
			/* ------------------------------------ */
			0, 4, 6, /* | */ 0, 3, 8, /* | */ 9, 5, 7, 
			3, 9, 0, /* | */ 4, 5, 7, /* | */ 8, 6, 0, 
			7, 5, 8, /* | */ 0, 9, 6, /* | */ 3, 0, 4, 
			/* ------------------------------------ */
			4, 6, 7, /* | */ 3, 0, 0, /* | */ 5, 8, 9, 
			8, 0, 3, /* | */ 5, 6, 9, /* | */ 7, 4, 0, 
			9, 0, 5, /* | */ 8, 7, 4, /* | */ 0, 3, 6
	});

	public static final GameGrid BAD_NOTVALID = SampleGrids.makeGrid(new int [] { 
			5, 0, 0, /* | */ 0, 0, 2, /* | */ 0, 0, 3, 
			6, 0, 9, /* | */ 7, 0, 0, /* | */ 0, 0, 5, 
			0, 3, 4, /* | */ 9, 1, 0, /* | */ 0, 0, 0, 
			/* ------------------------------------ */
			1, 0, 6, /* | */ 2, 0, 0, /* | */ 9, 5, 7, 
			0, 0, 2, /* | */ 0, 2, 0, /* | */ 0, 0, 1,   /* 2 in center quadrant is bad */
			0, 5, 0, /* | */ 0, 0, 0, /* | */ 0, 2, 0, 
			/* ------------------------------------ */
			0, 0, 0, /* | */ 3, 0, 0, /* | */ 0, 0, 0, 
			8, 0, 0, /* | */ 5, 6, 0, /* | */ 7, 0, 0, 
			9, 2, 5, /* | */ 0, 0, 0, /* | */ 1, 0, 0
	});

	public static final GameGrid BAD_UNSOLVABLE = SampleGrids.makeGrid(new int [] { 
			5, 0, 0, /* | */ 0, 0, 2, /* | */ 0, 0, 3, 
			6, 0, 9, /* | */ 0, 0, 0, /* | */ 0, 0, 5, 
			0, 3, 4, /* | */ 9, 1, 0, /* | */ 0, 0, 0, 
			/* ------------------------------------ */
			1, 0, 6, /* | */ 2, 0, 0, /* | */ 9, 5, 7, 
			0, 0, 2, /* | */ 0, 0, 0, /* | */ 0, 0, 1, 
			0, 0, 0, /* | */ 0, 0, 0, /* | */ 0, 2, 0, 
			/* ------------------------------------ */
			0, 0, 0, /* | */ 3, 0, 0, /* | */ 0, 0, 0, 
			8, 0, 0, /* | */ 5, 6, 0, /* | */ 7, 0, 0, 
			9, 2, 5, /* | */ 0, 0, 0, /* | */ 1, 0, 0
	});

	
	
	
	public static GameGrid makeGrid(int [] input)
	{
		GameGrid grid = new GameGrid();
		
		for (int x=0; x<input.length; x++)
		{
			grid.grid[x] = input[x];
		}
		
		return grid;
	}
}
