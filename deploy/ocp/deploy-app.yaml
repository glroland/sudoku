apiVersion: v1
kind: Service
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"ocr-svc"}]'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/glroland/sudoku.git
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-10-25T22:42:23Z"
  labels:
    app: app
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: sudoku
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:app.openshift.io/connects-to: {}
          f:app.openshift.io/vcs-ref: {}
          f:app.openshift.io/vcs-uri: {}
          f:openshift.io/generated-by: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.openshift.io/runtime: {}
          f:app.openshift.io/runtime-version: {}
      f:spec:
        f:ports:
          .: {}
          k:{"port":8080,"protocol":"TCP"}:
            .: {}
            f:name: {}
            f:port: {}
            f:protocol: {}
            f:targetPort: {}
        f:selector:
          .: {}
          f:app: {}
          f:deploymentconfig: {}
        f:sessionAffinity: {}
        f:type: {}
    manager: Mozilla
    operation: Update
    time: "2020-10-26T00:11:22Z"
  name: app
spec:
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 3000
  selector:
    app: app
    deploymentconfig: app
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"ocr-svc"}]'
    openshift.io/host.generated: "true"
  creationTimestamp: "2020-10-25T22:42:23Z"
  labels:
    app: app
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: sudoku
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  managedFields:
  - apiVersion: route.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:ingress: {}
    manager: openshift-router
    operation: Update
    time: "2020-10-25T22:42:23Z"
  - apiVersion: route.openshift.io/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:app.openshift.io/connects-to: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.openshift.io/runtime: {}
          f:app.openshift.io/runtime-version: {}
      f:spec:
        f:port:
          .: {}
          f:targetPort: {}
        f:tls:
          .: {}
          f:caCertificate: {}
          f:certificate: {}
          f:insecureEdgeTerminationPolicy: {}
          f:key: {}
          f:termination: {}
        f:to:
          f:kind: {}
          f:name: {}
          f:weight: {}
        f:wildcardPolicy: {}
    manager: Mozilla
    operation: Update
    time: "2020-10-26T00:11:23Z"
  name: app
spec:
  port:
    targetPort: 8080-tcp
  tls:
    caCertificate: |-
      -----BEGIN CERTIFICATE-----
      MIIEKzCCAxOgAwIBAgIUEbl6frxrwvK2aEo0LuyQT2Q2jfEwDQYJKoZIhvcNAQEF
      BQAwgaQxCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdHZW9yZ2lhMRMwEQYDVQQHDApB
      bHBoYXJldHRhMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxJjAk
      BgNVBAMMHSouYXBwcy5vY3A0LmhvbWUuZ2xyb2xhbmQuY29tMSMwIQYJKoZIhvcN
      AQkBFhRnbHJvbGFuZEBob3RtYWlsLmNvbTAeFw0xOTA5MDkxNDUyMDdaFw0yOTA5
      MDYxNDUyMDdaMIGkMQswCQYDVQQGEwJVUzEQMA4GA1UECAwHR2VvcmdpYTETMBEG
      A1UEBwwKQWxwaGFyZXR0YTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkg
      THRkMSYwJAYDVQQDDB0qLmFwcHMub2NwNC5ob21lLmdscm9sYW5kLmNvbTEjMCEG
      CSqGSIb3DQEJARYUZ2xyb2xhbmRAaG90bWFpbC5jb20wggEiMA0GCSqGSIb3DQEB
      AQUAA4IBDwAwggEKAoIBAQDBMaUXYFa6zsCFzIYs7W4WBfaO0F2fn+FU9MLHEGDX
      Hx3V+P2couI8WnwMm9ToP4Y468QpjZpDrLgZYWx+jCV5yb0nPfSZ7705/Q35NKYo
      G28ZI9Nm266jf/DWZHkmwDZs/DFSjvK6SAzb69WKP6l5I51BjpBUpdbYYc3B8Eh3
      7vrvX/5LCMe6rP00oU40qmXAepOicfx8/6EnwI4mYzwwO20iix0fNduqZMYzrLtb
      2k7qq+viJMBpyyEQfhIaw4hKWBAfkcILnkhAbKI4P1DWl9LmGhDLoLT2SEphqKA+
      M1LOL0NJfxUCjUcIUBiwRZ1Qua3T2OnZV4na1B03Qn9rAgMBAAGjUzBRMB0GA1Ud
      DgQWBBSDaApa+YokQHZRQfE938F6Ob6FmzAfBgNVHSMEGDAWgBSDaApa+YokQHZR
      QfE938F6Ob6FmzAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCC
      J6Ntt20XDLwe49ZFYYHiD6Y5roXjA6TByY2Fta44z7tTFPbhEx0Ky+nKu3KZr7F0
      Sju/X9ri+E9ZsUeYNsU+secRF+CM8XYZW+363KefUDRuKt5lix49asZ2fGadvunP
      uGhRpviwG9kIz9wfMHsdLOAFbvIUvSIJHtqGRIz40apechybtzFGah0FMVRhjqGz
      Q8t5jjpnIJysNc2HVBZx2N8kiiQqIMrRhhE0f7qUM83MzZ5zSgKzpw92gbeAB9pQ
      fbP9ZI2Y2ByjowO/FOFvK3dEhf8hIZdIE22/HhMhPTmixaL/AAQ4SINk8mIt48zb
      l3P4OkjQvGvLF7635AnT
      -----END CERTIFICATE-----
    certificate: |-
      -----BEGIN CERTIFICATE-----
      MIIEKzCCAxOgAwIBAgIUEbl6frxrwvK2aEo0LuyQT2Q2jfEwDQYJKoZIhvcNAQEF
      BQAwgaQxCzAJBgNVBAYTAlVTMRAwDgYDVQQIDAdHZW9yZ2lhMRMwEQYDVQQHDApB
      bHBoYXJldHRhMSEwHwYDVQQKDBhJbnRlcm5ldCBXaWRnaXRzIFB0eSBMdGQxJjAk
      BgNVBAMMHSouYXBwcy5vY3A0LmhvbWUuZ2xyb2xhbmQuY29tMSMwIQYJKoZIhvcN
      AQkBFhRnbHJvbGFuZEBob3RtYWlsLmNvbTAeFw0xOTA5MDkxNDUyMDdaFw0yOTA5
      MDYxNDUyMDdaMIGkMQswCQYDVQQGEwJVUzEQMA4GA1UECAwHR2VvcmdpYTETMBEG
      A1UEBwwKQWxwaGFyZXR0YTEhMB8GA1UECgwYSW50ZXJuZXQgV2lkZ2l0cyBQdHkg
      THRkMSYwJAYDVQQDDB0qLmFwcHMub2NwNC5ob21lLmdscm9sYW5kLmNvbTEjMCEG
      CSqGSIb3DQEJARYUZ2xyb2xhbmRAaG90bWFpbC5jb20wggEiMA0GCSqGSIb3DQEB
      AQUAA4IBDwAwggEKAoIBAQDBMaUXYFa6zsCFzIYs7W4WBfaO0F2fn+FU9MLHEGDX
      Hx3V+P2couI8WnwMm9ToP4Y468QpjZpDrLgZYWx+jCV5yb0nPfSZ7705/Q35NKYo
      G28ZI9Nm266jf/DWZHkmwDZs/DFSjvK6SAzb69WKP6l5I51BjpBUpdbYYc3B8Eh3
      7vrvX/5LCMe6rP00oU40qmXAepOicfx8/6EnwI4mYzwwO20iix0fNduqZMYzrLtb
      2k7qq+viJMBpyyEQfhIaw4hKWBAfkcILnkhAbKI4P1DWl9LmGhDLoLT2SEphqKA+
      M1LOL0NJfxUCjUcIUBiwRZ1Qua3T2OnZV4na1B03Qn9rAgMBAAGjUzBRMB0GA1Ud
      DgQWBBSDaApa+YokQHZRQfE938F6Ob6FmzAfBgNVHSMEGDAWgBSDaApa+YokQHZR
      QfE938F6Ob6FmzAPBgNVHRMBAf8EBTADAQH/MA0GCSqGSIb3DQEBBQUAA4IBAQCC
      J6Ntt20XDLwe49ZFYYHiD6Y5roXjA6TByY2Fta44z7tTFPbhEx0Ky+nKu3KZr7F0
      Sju/X9ri+E9ZsUeYNsU+secRF+CM8XYZW+363KefUDRuKt5lix49asZ2fGadvunP
      uGhRpviwG9kIz9wfMHsdLOAFbvIUvSIJHtqGRIz40apechybtzFGah0FMVRhjqGz
      Q8t5jjpnIJysNc2HVBZx2N8kiiQqIMrRhhE0f7qUM83MzZ5zSgKzpw92gbeAB9pQ
      fbP9ZI2Y2ByjowO/FOFvK3dEhf8hIZdIE22/HhMhPTmixaL/AAQ4SINk8mIt48zb
      l3P4OkjQvGvLF7635AnT
      -----END CERTIFICATE-----
    insecureEdgeTerminationPolicy: None
    key: |-
      -----BEGIN RSA PRIVATE KEY-----
      MIIEpAIBAAKCAQEAwTGlF2BWus7AhcyGLO1uFgX2jtBdn5/hVPTCxxBg1x8d1fj9
      nKLiPFp8DJvU6D+GOOvEKY2aQ6y4GWFsfowlecm9Jz30me+9Of0N+TSmKBtvGSPT
      Ztuuo3/w1mR5JsA2bPwxUo7yukgM2+vVij+peSOdQY6QVKXW2GHNwfBId+7671/+
      SwjHuqz9NKFONKplwHqTonH8fP+hJ8COJmM8MDttIosdHzXbqmTGM6y7W9pO6qvr
      4iTAacshEH4SGsOISlgQH5HCC55IQGyiOD9Q1pfS5hoQy6C09khKYaigPjNSzi9D
      SX8VAo1HCFAYsEWdULmt09jp2VeJ2tQdN0J/awIDAQABAoIBAAvM33udC88fP80s
      X+mwmu/Hb3brrTxJxLauuJL2IiQhp23hZoRBwrXTBQ60Gf4Rmz4w0GuFVa3ah+gs
      9jaIkuVseBxEgYNBjHpVRZw6Jgf/HPsZIBmBQ5qC/w/pVSkTxn9DrDORvau5KOfp
      8MIf/1cB4OIXNiOleYj/+FRnO9XvbLrL8L77ZbkTItK/ThLZ0axyBkOzUWGSgLGG
      iDi18VFj/ch6PjZWEDMio0f5pJin3YuWagPrMoMT3rZFbxg8ZCt1zueHAdt8Dwkp
      oC03UPCPyHq9fuArrj9sdZtslczikM/lMwoy518uv/qVBZq+P+4EKHTKaFtnhXRU
      p4B+tykCgYEA6cRFh3oj6VbOY8VxCYkh8tkTZrqgb5FZPiBMZBjjK/H9ruVIbeNk
      WZVFCD8kP/K3JirYt2Byf58JMyNsGvVCnRi+cKlm2PddpZkfKZ5gwszYyF4KsRix
      Fod0Lu1fVZRimEtQmvV6PrWvTLmY5fG2SiGaw6J6RcHYSu03s62zmq8CgYEA05GC
      /bIfuTQrmqgpX3S7pBDtXYbUfK8H5Y2stsuu39/DpceWSicEMBVThDs0efwR0Ljr
      uWCu9sgszoQ+UyFxi1bSUzWU6xgYT/MLIZKMHFbTgM8tItaFj0UFy8cHJqDWsgpB
      Z1PUpQ06H1CBmC/0xha/2hSJOT1tqwQ+OLt9pgUCgYEA4F8ReUpDY7h82ohsyYFF
      A2lVVNm2Gb/Bj37Cs6Srjsdy/UZ28Xo7HDzIiHTKX1KgddLUNZYt785+rwXFwk47
      xLs2Nr5xx7gNu18v6Otp5i9lt1OEIZ0YhA449r3BLkwBIjnPwRvyXHRYMGVHmxUY
      KSj9+d5eS8wVxTzQpPYJGGMCgYA/N+jbY+Fk1vj8kqkiM+Bp6wDyhHpz8105s7bb
      PEu568QrglMfPz9aGtVE2ugYV0D/jHIrh39gkHoLD6sL7h9ekofwgz9HbIC/SxGV
      a5PgV/WFNOL42P85y1crCALUARWGR9g5RuxwkV4/wy+mSRYsJtoXETHb38YoZvEs
      xKGL/QKBgQCKJ3uvkiR1LwvTSJf04hNhPCy11qgXVJxcoqOzV9kIqhnUOoFQzJKM
      1VtLA3wrHK2qm4XVWNFJ/AdzTldE0QNdmiuclkFsgHKJ8ANINCOOmyLAxOVphFdp
      leM16XtkRXO/roZKVZaRjF5nF4UG5tbsplAWgr4Evn607zxIKDgVKA==
      -----END RSA PRIVATE KEY-----
    termination: edge
  to:
    kind: Service
    name: app
    weight: 100
  wildcardPolicy: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"ocr-svc"},{"apiVersion":"apps/v1","kind":"Deployment","name":"svc"}]'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: https://github.com/glroland/sudoku.git
    deployment.kubernetes.io/revision: "5"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"app:latest","namespace":"sudoku"},"fieldPath":"spec.template.spec.containers[?(@.name==\"app\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2020-10-25T22:42:23Z"
  generation: 7
  labels:
    app: app
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: app
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: sudoku
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: "12"
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:spec:
            f:containers:
              k:{"name":"app"}:
                f:image: {}
    manager: openshift-controller-manager
    operation: Update
    time: "2020-10-25T22:51:08Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:alpha.image.policy.openshift.io/resolve-names: {}
          f:app.openshift.io/connects-to: {}
          f:app.openshift.io/vcs-ref: {}
          f:app.openshift.io/vcs-uri: {}
          f:image.openshift.io/triggers: {}
          f:openshift.io/generated-by: {}
        f:labels:
          .: {}
          f:app: {}
          f:app.kubernetes.io/component: {}
          f:app.kubernetes.io/instance: {}
          f:app.kubernetes.io/name: {}
          f:app.kubernetes.io/part-of: {}
          f:app.openshift.io/runtime: {}
          f:app.openshift.io/runtime-version: {}
      f:spec:
        f:progressDeadlineSeconds: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector:
          f:matchLabels:
            .: {}
            f:app: {}
        f:strategy:
          f:rollingUpdate:
            .: {}
            f:maxSurge: {}
            f:maxUnavailable: {}
          f:type: {}
        f:template:
          f:metadata:
            f:labels:
              .: {}
              f:app: {}
              f:deploymentconfig: {}
          f:spec:
            f:containers:
              k:{"name":"app"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"NODE_TLS_REJECT_UNAUTHORIZED"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"PORT"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REACT_APP_SUDOKU_URL_OCRSVC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"REACT_APP_SUDOKU_URL_SVC"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
    manager: Mozilla
    operation: Update
    time: "2020-10-26T00:11:26Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          f:deployment.kubernetes.io/revision: {}
      f:status:
        f:availableReplicas: {}
        f:conditions:
          .: {}
          k:{"type":"Available"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
          k:{"type":"Progressing"}:
            .: {}
            f:lastTransitionTime: {}
            f:lastUpdateTime: {}
            f:message: {}
            f:reason: {}
            f:status: {}
            f:type: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    time: "2020-10-26T00:11:26Z"
  name: app
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: app
        deploymentconfig: app
    spec:
      containers:
      - env:
        - name: REACT_APP_SUDOKU_URL_SVC
          value: http://svc:8080
        - name: REACT_APP_SUDOKU_URL_OCRSVC
          value: http://ocr-svc:8080
        - name: NODE_TLS_REJECT_UNAUTHORIZED
          value: "0"
        - name: PORT
          value: "3000"
        image: app:latest
        imagePullPolicy: Always
        name: app
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /live
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /live
            port: 8080
            scheme: HTTP
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 3
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
