apiVersion: 1.0.0
projects:
  - name: sudoku
    source:
      location: 'https://github.com/glroland/sudoku.git'
      type: github
      branch: master
metadata:
  generateName: sudoku-
components:
  - id: redhat/java11/latest
    type: chePlugin
  - id: redhat/dependency-analytics/latest
    type: chePlugin
  - id: ms-python/python/latest
    type: chePlugin
    preferences:
      python.globalModuleInstallation: true
    memoryLimit: 512Mi
  - type: chePlugin
    id: che-incubator/typescript/latest
    memoryLimit: 512Mi
  - type: chePlugin
    id: ms-vscode/node-debug2/latest
  - mountSources: true
    memoryLimit: 512Mi
    endpoints:
      - name: 8080-tcp
        port: 8080
    type: dockerimage
    volumes:
      - name: maven
        containerPath: /home/user/.m2
    image: 'registry.redhat.io/codeready-workspaces/plugin-java8-rhel8:latest'
    env:
      - value: >-
          -XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10
          -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4
          -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true
          -Xms20m -Djava.security.egd=file:/dev/./urandom
          -Duser.home=/home/jboss
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
    alias: sudoku-svc
  - mountSources: true
    type: dockerimage
    alias: sudoku-ocr-svc
    memoryLimit: 512Mi
    image: >-
      registry.redhat.io/codeready-workspaces/plugin-java8-rhel8
  - type: dockerimage
    alias: sudoku-app
    memoryLimit: 1Gi
    image: >-
      registry.redhat.io/codeready-workspaces/plugin-java8-rhel8
    env:
      - name: SECRET
        value: 220fd770-c028-480d-8f95-f84353c7d55a
      - name: NODE_ENV
        value: production
    endpoints:
      - name: nodejs
        port: 8080
    mountSources: true
commands:
  - name: 1. Build
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku'
        type: exec
        command: >-
          MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} -DskipTests clean
          install
        component: sudoku-svc
  - name: 2. Run
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-svc'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} spring-boot:run'
        component: sudoku-svc
  - name: 3. Run in debug mode
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-svc'
        type: exec
        command: >-
          mvn  -Duser.home=${HOME} spring-boot:run
          -Dspring-boot.run.jvmArguments="-Xdebug
           -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"
        component: sudoku-svc
  - name: 4. Run tests
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-svc'
        type: exec
        command: 'MAVEN_OPTS="-Xmx200m" && mvn -Duser.home=${HOME} verify'
        component: sudoku-svc
  - name: 5. Log into deployment cluster
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-svc'
        type: exec
        command: |
          echo
          echo "Before you can deploy this application to an openshift cluster,"
          echo "you must run 'oc login ...' in the maven terminal."
          echo
        component: sudoku-svc
  - name: 6. Deploy to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-svc'
        type: exec
        command: 'mvn fabric8:deploy -Popenshift -DskipTests'
        component: sudoku-svc
  - name: Debug remote java application
    actions:
      - referenceContent: |
          {
           "version": "0.2.0",
           "configurations": [
             {
               "type": "java",
               "name": "Debug (Attach) - Remote",
               "request": "attach",
               "hostName": "localhost",
               "port": 5005
             }]
           }
        type: vscode-launch
  - name: 1. Run
    actions:
      - type: exec
        component: sudoku-ocr-svc
        command: python hello-world.py
        workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-ocr-svc'
  - name: Debug current file
    actions:
      - type: vscode-launch
        referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "name": "Python: Current File",
                "type": "python",
                "request": "launch",
                "program": "${file}",
                "console": "internalConsole"
              }
            ]
          }
  - name: 1. Run the application
    actions:
      - type: exec
        component: sudoku-app
        command: npm install && node --inspect=9229 app.js
        workdir: '${CHE_PROJECTS_ROOT}/sudoku/sudoku-app'
  - name: Debug remote node application
    actions:
      - type: vscode-launch
        referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "node",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "port": 9229
            }]
          }
