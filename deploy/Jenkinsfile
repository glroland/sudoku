node {
   def mvnHome
   stage('Prepare') { // for display purposes
      git '$SUDOKU_GIT_URL'
      mvnHome = tool 'Maven'
      if (!isUnix()) {
          error "Builds on Windows are not supported."
      }
   }
   stage('Build') {
      withEnv(["MVN_HOME=$mvnHome"]) {
        sh '"$MVN_HOME/bin/mvn" -Dmaven.test.failure.ignore --projects sudoku-lib,sudoku-svc clean install'
      }
   }
   stage('Scan') {
//       dependencyCheck additionalArguments: '', odcInstallation: 'Dependency Check'
   }
   stage('Archive') {
      archiveArtifacts 'sudoku-svc/target/*.jar'
   }
   stage('OpenShift Image Build') {
      echo "Entering OpenShift Image Build"
      try {
         withEnv(["PATH=${tool 'oc_cli'}"]) {
            openshift.verbose()
            echo "OpenShift.withCluster()"
            openshift.withCluster('ocp4.home.glroland.com') {
               echo "OpenShift.withProject()"
               openshift.withProject('sudoku-build') {
                  echo "OpenShift.delete()s"
                  openshift.selector('buildconfig', [ name:'abc' ]).delete()
                  openshift.selector('imagestream', [ name:'abc' ]).delete()

                  echo "OpenShift.newBuild()"
                  openshift.newBuild('java:latest', '--name=abc', '--binary') {
                     echo "OpenShift.startBuild()"
                     openshift.startBuild('abc', '--from-file=sudoku-svc/target/sudoku-svc-1.0.jar', '--wait')
                  }
               }
            }
         }
      }
      catch (e) {
        "Error encountered: ${e}"
    }
   }
}
