apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sudoku.fullname" . }}
  labels:
    app.kubernetes.io/part-of: "{{ .Release.Name }}-sudoku"
    {{- include "sudoku.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      {{- include "sudoku.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sudoku.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.global.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.global.image.pullSecret }}
      {{- end }}
      {{ if eq .Values.global.useServiceAccount true }}
      serviceAccountName: {{ include "sudoku.fullname" . }}
      {{ end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: {{ include "sudoku.fullname" . }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: {{ include "sudoku.fullname" . }}
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              key: database-name
              name: {{ include "sudoku.fullname" . }}
        - name: PGDATA
          value: /var/lib/pgsql/data/pvc
        image: "{{ .Values.image.name }}"
        imagePullPolicy: {{ .Values.global.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.image.port }}
          protocol: TCP
        name: {{ .Chart.Name }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        securityContext:
          capabilities: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: postgresql-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: postgresql-data
        persistentVolumeClaim:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
